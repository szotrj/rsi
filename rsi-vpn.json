{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "OpenVPN Stack",
    "Parameters": {
        "OpenVPNPort": {
            "Type": "Number",
            "Default": 1194,
            "Description": "OpenVPN UDP port"
        },
        "SSHKeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "SSH Key for the OpenVPN Instance",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "ClientIPCIDR": {
            "Type": "String",
            "Default": "0.0.0.0/0",
            "Description": "CIDR IP to be granted access by the SG, use 0.0.0.0/0 to accept all IPs"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMAZONLINUXAMI": "ami-8c1be5f6"
            },
            "us-east-2": {
                "AMAZONLINUXAMI": "ami-c5062ba0"
            },
            "us-west-1": {
                "AMAZONLINUXAMI": "ami-02eada62"
            },
            "us-west-2": {
                "AMAZONLINUXAMI": "ami-e689729e"
            },
            "ca-central-1": {
                "AMAZONLINUXAMI": "ami-fd55ec99"
            },
            "eu-west-1": {
                "AMAZONLINUXAMI": "ami-acd005d5"
            },
            "eu-central-1": {
                "AMAZONLINUXAMI": "ami-c7ee5ca8"
            },
            "eu-west-2": {
                "AMAZONLINUXAMI": "ami-1a7f6d7e"
            },
            "ap-southeast-1": {
                "AMAZONLINUXAMI": "ami-0797ea64"
            },
            "ap-southeast-2": {
                "AMAZONLINUXAMI": "ami-8536d6e7"
            },
            "ap-northeast-2": {
                "AMAZONLINUXAMI": "ami-9bec36f5"
            },
            "ap-northeast-1": {
                "AMAZONLINUXAMI": "ami-2a69be4c"
            },
            "ap-south-1": {
                "AMAZONLINUXAMI": "ami-4fc58420"
            },
            "sa-east-1": {
                "AMAZONLINUXAMI": "ami-f1344b9d"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/22",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "OpenVPN-VPC"
                    }
                ]
            }
        },
        "PublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.0.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "OpenVPN-Public-Subnet"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "OpenVPN-IGW"
                    }
                ]
            }
        },
        "RouteTablePublic": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "OpenVPN-Route-Table-Public"
                    }
                ]
            }
        },
        "AttachInternetGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RouteDefaultPublic": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "InternetGateway",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePublic"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePublic"
                }
            }
        },
        "EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "AssociateManagementAccessPort": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "NetworkInterface"
                }
            }
        },
        "OpenVPNInstanceSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for OpenVPN Server",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "udp",
                        "FromPort": {
                            "Ref": "OpenVPNPort"
                        },
                        "ToPort": {
                            "Ref": "OpenVPNPort"
                        },
                        "CidrIp": {
                            "Ref": "ClientIPCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": {
                            "Ref": "ClientIPCIDR"
                        }
                    }
                ]
            }
        },
        "EC2InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "AccessPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "AccessPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "EC2InstanceRole"
                    }
                ]
            }
        },
        "ec2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2InstanceRole"
                    }
                ]
            }
        },
        "NetworkInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "Description": "Public Interface",
                "GroupSet": [
                    {
                        "Ref": "OpenVPNInstanceSG"
                    }
                ],
                "SourceDestCheck": false,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Public ENI"
                    }
                ]
            }
        },
        "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "Private"
            }
        },
        "EC2OpenVPNInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMAZONLINUXAMI"
                    ]
                },
                "InstanceType": "t2.micro",
                "SourceDestCheck": false,
                "KeyName": {
                    "Ref": "SSHKeyName"
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "NetworkInterface"
                        },
                        "DeviceIndex": 0
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "ec2InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "OpenVPN Server"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash\nyum update -y aws-cfn-bootstrap\n/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2OpenVPNInstance --configsets CfnConfigSet --region ${AWS::Region}\nyum -y update\n/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2OpenVPNInstance --region ${AWS::Region}\n"
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT10M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "CfnConfigSet": [
                            "configure_cfn",
                            "install_software",
                            "generate_secrets",
                            "generate_client",
                            "configure_server",
                            "upload_files"
                        ]
                    },
                    "configure_cfn": {
                        "files": {
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.EC2OpenVPNInstance.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2OpenVPNInstance --configsets CfnConfigSet --region ${AWS::Region}\n"
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\nverbose=true\ninterval=1\n"
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "install_software": {
                        "packages": {
                            "yum": {
                                "openvpn": []
                            }
                        },
                        "commands": {
                            "01_install_software_install_easyrsa": {
                                "command": "yum install easy-rsa -y --enablerepo=epel"
                            },
                            "02_install_software_copy_easyrsa": {
                                "command": "cp -R /usr/share/easy-rsa/3 /opt/easy-rsa"
                            }
                        }
                    },
                    "generate_secrets": {
                        "commands": {
                            "01_generate_secrets_clean_keysdir": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/clean-all",
                                "command": "source /opt/easy-rsa/vars;/opt/easy-rsa/clean-all"
                            },
                            "02_generate_secrets_update_build-ca": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-ca",
                                "command": {
                                    "Fn::Sub": "sed -i 's/--interact//g' /opt/easy-rsa/build-ca\n"
                                }
                            },
                            "03_generate_secrets_run_build-ca": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-ca",
                                "command": "source /opt/easy-rsa/vars;/opt/easy-rsa/build-ca"
                            },
                            "04_generate_secrets_run_build-dh": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-dh",
                                "command": "source /opt/easy-rsa/vars;/opt/easy-rsa/build-dh"
                            },
                            "05_generate_secrets_update_build-key-server": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-key-server",
                                "command": {
                                    "Fn::Sub": "sed -i 's/--interact//g' /opt/easy-rsa/build-key-server\n"
                                }
                            },
                            "06_generate_secrets_run_build-key-server": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-key-server",
                                "command": "source /opt/easy-rsa/vars;/opt/easy-rsa/build-key-server server"
                            },
                            "07_generate_secrets_statictlssecret": {
                                "cwd": "/opt/easy-rsa/keys",
                                "command": "openvpn --genkey --secret statictlssecret.key"
                            }
                        }
                    },
                    "generate_client": {
                        "files": {
                            "/opt/easy-rsa/openvpn_client.conf": {
                                "content": {
                                    "Fn::Sub": "client\ndev tun\nproto udp\nremote ${EIP} ${OpenVPNPort}\nca ca.crt\ncert clientuser.crt\nkey clientuser.key\ntls-client\ntls-auth statictlssecret.key 1\ntls-version-min 1.2\ntls-cipher TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256:TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256:TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384:TLS-DHE-RSA-WITH-AES-256-CBC-SHA256\ncipher AES-256-CBC\nauth SHA512\nresolv-retry infinite\nauth-retry none\nnobind\npersist-key\npersist-tun\nns-cert-type server\ncomp-lzo\nverb 3\n"
                                },
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/opt/easy-rsa/gen_ovpn_profile.sh": {
                                "content": {
                                    "Fn::Sub": "(cat /opt/easy-rsa/openvpn_client.conf\necho '<key>'\ncat keys/clientuser.key\necho '</key>'\necho '<cert>'\ncat keys/clientuser.crt\necho '</cert>'\necho '<ca>'\ncat keys/ca.crt\necho '</ca>'\n) > /opt/easy-rsa/keys/openvpn_clientuser.ovpn\n"
                                },
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_generate_client_update_build-key": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-key",
                                "command": {
                                    "Fn::Sub": "sed -i 's/--interact//g' /opt/easy-rsa/build-key\n"
                                }
                            },
                            "02_generate_client_run_build-key": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/build-key",
                                "command": "source /opt/easy-rsa/vars;/opt/easy-rsa/build-key clientuser"
                            },
                            "03_generate_client_generate_ovpn_profile": {
                                "cwd": "/opt/easy-rsa",
                                "test": "test -e /opt/easy-rsa/gen_ovpn_profile.sh",
                                "command": "/opt/easy-rsa/gen_ovpn_profile.sh"
                            }
                        }
                    },
                    "configure_server": {
                        "files": {
                            "/opt/openvpn/server.conf": {
                                "content": {
                                    "Fn::Sub": "port ${OpenVPNPort}\nproto udp\ndev tun\nserver 172.16.0.0 255.255.252.0\npush \"redirect-gateway def1\"\nca /opt/easy-rsa/keys/ca.crt\ncert /opt/easy-rsa/keys/server.crt\nkey /opt/easy-rsa/keys/server.key\ndh /opt/easy-rsa/keys/dh2048.pem\ntls-server\ntls-auth /opt/easy-rsa/keys/statictlssecret.key 0\ntls-version-min 1.2\ntls-cipher TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256:TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256:TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384:TLS-DHE-RSA-WITH-AES-256-CBC-SHA256\ncipher AES-256-CBC\nauth SHA512\nifconfig-pool-persist ipp.txt\nkeepalive 10 120\nping-timer-rem\ncomp-lzo\npersist-key\npersist-tun\nstatus openvpn-status.log\nlog-append /var/log/openvpn.log\nverb 3\nmax-clients 100\nuser nobody\ngroup nobody\n"
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_configure_server_sysctl_ipforward": {
                                "command": "echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf"
                            },
                            "02_configure_server_sysctl_reload": {
                                "command": "sysctl -p"
                            },
                            "03_configure_server_iptables_nat": {
                                "command": "iptables -t nat -A POSTROUTING -s 172.16.0.0/22 -o eth0 -j MASQUERADE"
                            },
                            "04_configure_server_update_config": {
                                "command": "cp -rf /opt/openvpn/server.conf /etc/openvpn/server.conf"
                            },
                            "05_configure_server_openvpn_start": {
                                "command": "service openvpn start"
                            }
                        }
                    },
                    "upload_files": {
                        "commands": {
                            "01_upload_files_zipfiles": {
                                "cwd": "/opt/easy-rsa/keys",
                                "command": "zip openVPNClientFiles.zip ca.crt statictlssecret.key clientuser.key clientuser.crt openvpn_clientuser.ovpn"
                            },
                            "02_upload_files_s3cp_openVPNClientFiles": {
                                "cwd": "/opt/easy-rsa/keys",
                                "command": {
                                    "Fn::Sub": "aws s3 cp openVPNClientFiles.zip s3://${S3Bucket}/client/openVPNClientFiles.zip\n"
                                }
                            },
                            "03_upload_files_s3cp_cfn_init_log": {
                                "cwd": "/var/log",
                                "test": "test -e /var/log/cfn-init.log",
                                "command": {
                                    "Fn::Sub": "aws s3 cp /var/log/cfn-init.log s3://${S3Bucket}/log/genSecrets_cfn-init.log\n"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "Outputs": {
        "S3BucketOut": {
            "Description": "S3 bucket name",
            "Value": {
                "Ref": "S3Bucket"
            }
        },
        "EIPOut": {
            "Description": "Instance EIP",
            "Value": {
                "Ref": "EIP"
            }
        },
        "EC2OpenVPNInstanceOut": {
            "Description": "EC2 Instance",
            "Value": {
                "Ref": "EC2OpenVPNInstance"
            }
        }
    }
}
