{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "IAM User, Group, Access Key for Splunk with custom resource to send key via SNS",
    "Parameters": {
        "pSplunkUserName": {
            "Type": "String",
            "Default": "SplunkUser",
            "Description": "Name of the Splunk IAM User"
        },
        "pSplunkGroupName": {
            "Type": "String",
            "Default": "SplunkGroup",
            "Description": "Name of the Splunk IAM Group"
        },
        "pSNSTopicName": {
            "Type": "String",
            "Default": "",
            "Description": "ARN of the SNS topic to send the Access Key to"
        },
        "pLambdaRole": {
            "Type": "String",
            "Default": "MonitorRole",
            "Description": "Name of the role to use for Lambda execution"
        },
        "pAccessKeySerial": {
            "Type": "Number",
            "Default": 1,
            "Description": "Access Key Serial used for key rotation"
        }
    },
    "Resources": {
        "rSplunkUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
              "UserName": { "Ref": "pSplunkUserName" },
              "Groups": [ { "Ref": "rSplunkGroup" } ]
            }
        },
        "rSplunkGroup": {
            "Type": "AWS::IAM::Group",
            "Properties": {
               "GroupName": { "Ref": "pSplunkGroupName" },
               "Policies": [ {
                   "PolicyName": "SplunkGroupPolicy",
                   "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                "sqs:GetQueueAttributes",
                                "sqs:ListQueues",
                                "sqs:ReceiveMessage",
                                "sqs:GetQueueUrl",
                                "sqs:SendMessage",
                                "sqs:DeleteMessage",
                                "s3:ListBucket",
                                "s3:GetObject",
                                "s3:GetBucketLocation",
                                "s3:ListAllMyBuckets",
                                "s3:GetBucketTagging", 
                                "s3:GetAccelerateConfiguration", 
                                "s3:GetBucketLogging", 
                                "s3:GetLifecycleConfiguration", 
                                "s3:GetBucketCORS",
                                "iam:GetUser",
                                "iam:ListUsers",
                                "iam:GetAccountPasswordPolicy",
                                "iam:ListAccessKeys",
                                "iam:GetAccessKeyLastUsed",
                                "cloudwatch:Describe*",
                                "cloudwatch:Get*",
                                "cloudwatch:List*",
                                "sns:Get*",
                                "sns:List*",
                                "sns:Publish",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents",
                                "kinesis:Get*",
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams",
                                "kms:Decrypt"
                                ],
                                "Resource": [
                                "*"
                                ]
                            }
                        ]
                    }
                  }
                ]
            }
        },
        "rSplunkUserAccessKey" : {
            "Type": "AWS::IAM::AccessKey",
            "Properties": {
               "UserName": { "Ref" : "rSplunkUser" },
               "Status": "Active",
               "Serial": { "Ref": "pAccessKeySerial" }
            }
        },
        "rSendAccessKeyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": "sendAccessKey",
                "Handler": "sendAccessKey.lambda_handler",
                "Runtime": "python2.7",
                "Code": {
                    "S3Bucket": "lambda-functions",
                    "S3Key": "sendAccessKey.zip"
                },
                "Environment": {
                    "Variables": {
                        "SNSARN": { "Fn::Sub": "arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${pSNSTopicName}" }
                    }
                },
                "Role": { "Fn::Sub": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${pLambdaRole}" },
                "Description": "Sends IAM Access Key to SNS topic",
                "MemorySize": 128,
                "Timeout": 30
            }
        },
        "rLambdaBackedCustomResource": {
            "Type": "Custom::SendAccessKeyLambda",
            "Properties": {
                "ServiceToken": { "Fn::GetAtt": [ "rSendAccessKeyLambdaFunction", "Arn" ] },
                "AccessKeyId": { "Ref": "rSplunkUserAccessKey" },
                "SecretAccessKey": { "Fn::GetAtt": [ "rSplunkUserAccessKey", "SecretAccessKey"]}
            }
        }
    },
    "Outputs": {
    }
}