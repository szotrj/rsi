{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a cross-account role for CloudCheckr",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups":[
				{
					"Label": {"default": "IAM Role"},
					"Parameters":["pExternalAccount","pExternalId"]
				},
				{
					"Label": {"default": "Inventory"},
					"Parameters":["pInventoryAndUtilzation"]
				},
				{
					"Label": {"default": "Billing"},
					"Parameters":["pCostPermissions","pBillingBucket", "pCurBucket"]
				},
				{
					"Label": {"default": "Security"},
					"Parameters":["pSecurity","pCloudTrailBucket"]
				},
				{
					"Label": {"default": "CloudWatch Flow Logs"},
					"Parameters":["pCloudWatchFlowLogs"]
				}
			]
		}
	},
	"Parameters": {
		"pExternalId": {
            "Type": "String",
            "Default": "",
			"Description": "CloudCheckr External ID"
		},
		"pExternalAccount": {
			"Type": "String",
			"Default": "",
			"Description": "CloudCheckr Account ID"
		},
		"pSecurity": {
			"Type": "String",
			"Default": "True",
			"Description": "Use CloudCheckr to process security data?",
			"AllowedValues": ["True", "False"]
		},
		"pInventoryAndUtilzation": {
			"Type": "String",
			"Default": "True",
			"Description": "Use CloudCheckr to process inventory and utilization data?",
			"AllowedValues": ["True", "False"]
		},
		"pCostPermissions": {
			"Type": "String",
			"Default": "True",
			"Description": "Use CloudCheckr to process billing data?",
			"AllowedValues": ["True", "False"]
		},
		"pBillingBucket": {
			"Type": "String",
			"Description": "AWS Detailed Billing Report Bucket"
		},
		"pCurBucket": {
			"Type": "String",
			"Description": "AWS Cost and Usage Report Bucket"
		},
		"pCloudTrailBucket": {
			"Type": "String",
			"Description": "AWS CloudTrail Bucket"
		},
		"pCloudWatchFlowLogs": {
			"Type": "String",
			"Default": "True",
			"Description": "Use CloudCheckr to process CloudWatch Flow Logs data?",
			"AllowedValues": ["True", "False"]
		}
	},
	"Conditions": {
		"cIncludeCost": {"Fn::Equals": [{"Ref": "pCostPermissions"}, "True"]},
		"cIncludeInventory": {"Fn::Equals": [{"Ref": "pInventoryAndUtilzation"}, "True"]},
		"cIncludeSecurity": {"Fn::Equals": [{"Ref": "pSecurity"}, "True"]},
		"cIncludeFlowLogs": {"Fn::Equals": [{"Ref": "pCloudWatchFlowLogs"}, "True"]},
		"cIncludeCloudTrailBucket": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "pCloudTrailBucket"}]}]},
		"cIncludeBillingBucket": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "pBillingBucket"}]}]},
		"cIncludeCurBucket": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "pCurBucket"}]}]}
	},
	"Resources": {
		"rCloudCheckrRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
                "RoleName": "CloudCheckrRole",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {"AWS": {"Fn::Sub": "arn:${AWS::Partition}:iam::${pExternalAccount}:root"}},
						"Action": "sts:AssumeRole",
						"Condition": {
							"StringEquals": {
								"sts:ExternalId": {
									"Ref": "pExternalId"
								}
							}
						}
					}]
				}
			}
		},
		"rCloudWatchFlowLogsPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeFlowLogs",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-CloudWatchFlowLogs-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[{
						"Sid": "CloudWatchLogsSpecific",
						"Effect": "Allow",
						"Action":[
							"logs:GetLogEvents",
							"logs:DescribeLogGroups",
							"logs:DescribeLogStreams"
						],
						"Resource":[
							{ "Fn::Sub": "arn:${AWS::Partition}:logs:*:*:*" }
						]
					}]
				}
			}
		},
		"rCloudTrailPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeCloudTrailBucket",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-CloudTrail-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[{
						"Sid": "CloudTrailPermissions",
						"Effect": "Allow",
						"Action": [
							"s3:GetBucketACL",
							"s3:GetBucketLocation",
							"s3:GetBucketLogging",
							"s3:GetBucketPolicy",
							"s3:GetBucketTagging",
							"s3:GetBucketWebsite",
							"s3:GetBucketNotification",
							"s3:GetLifecycleConfiguration",
							"s3:GetNotificationConfiguration",
							"s3:GetObject",
							"s3:List*"
						],
						"Resource": [
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pCloudTrailBucket}"},
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pCloudTrailBucket}/*"}
						]
					}]
				}
			}
		},
		"rSecurityPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeSecurity",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-Security-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[{
						"Sid": "SecurityPermissons",
						"Effect": "Allow",
						"Action":[
								"acm:DescribeCertificate",
								"acm:ListCertificates",
								"acm:GetCertificate",
								"cloudtrail:DescribeTrails",
								"cloudtrail:GetTrailStatus",
								"logs:GetLogEvents",
								"logs:DescribeLogGroups",
								"logs:DescribeLogStreams",
								"config:DescribeConfigRules",
								"config:GetComplianceDetailsByConfigRule",
								"config:DescribeDeliveryChannels",
								"config:DescribeDeliveryChannelStatus",
								"config:DescribeConfigurationRecorders",
								"config:DescribeConfigurationRecorderStatus",
								"ec2:Describe*",
								"iam:Get*",
								"iam:List*",
								"iam:GenerateCredentialReport",
								"kms:DescribeKey",
								"kms:GetKeyPolicy",
								"kms:GetKeyRotationStatus",
								"kms:ListAliases",
								"kms:ListGrants",
								"kms:ListKeys",
								"kms:ListKeyPolicies",
								"kms:ListResourceTags",
								"rds:Describe*",
								"ses:ListIdentities",
								"ses:GetSendStatistics",
								"ses:GetIdentityDkimAttributes",
								"ses:GetIdentityVerificationAttributes",
								"ses:GetSendQuota",
								"sns:GetSnsTopic",
								"sns:GetTopicAttributes",
								"sns:GetSubscriptionAttributes",
								"sns:ListTopics",
								"sns:ListSubscriptionsByTopic",
								"sqs:ListQueues",
								"sqs:GetQueueAttributes"
							],
						"Resource": "*"
					}]
				}
			}
		},
		"rInventoryPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeInventory",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-Inventory-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[{
						"Sid": "InventoryAndUtilization",
						"Effect": "Allow",
						"Action":[
							"acm:DescribeCertificate",
							"acm:ListCertificates",
							"acm:GetCertificate",
							"ec2:Describe*",
							"ec2:GetConsoleOutput",
							"autoscaling:Describe*",
							"cloudformation:DescribeStacks",
							"cloudformation:GetStackPolicy",
							"cloudformation:GetTemplate",
							"cloudformation:ListStackResources",
							"cloudfront:List*",
							"cloudfront:GetDistributionConfig",
							"cloudfront:GetStreamingDistributionConfig",
							"cloudhsm:Describe*",
							"cloudhsm:List*",
							"cloudsearch:Describe*",
							"cloudtrail:DescribeTrails",
							"cloudtrail:GetTrailStatus",
							"cloudwatch:DescribeAlarms",
							"cloudwatch:GetMetricStatistics",
							"cloudwatch:ListMetrics",
							"cognito-identity:ListIdentities",
							"cognito-identity:ListIdentityPools",
							"cognito-idp:ListGroups",
							"cognito-idp:ListIdentityProviders",
							"cognito-idp:ListUserPools",
							"cognito-idp:ListUsers",
							"cognito-idp:ListUsersInGroup",
							"config:DescribeConfigRules",
							"config:GetComplianceDetailsByConfigRule",
							"config:Describe*",
							"datapipeline:ListPipelines",
							"datapipeline:GetPipelineDefinition",
							"datapipeline:DescribePipelines",
							"directconnect:DescribeLocations",
							"directconnect:DescribeConnections",
							"directconnect:DescribeVirtualInterfaces",
							"dynamodb:ListTables",
							"dynamodb:DescribeTable",
							"dynamodb:ListTagsOfResource",
							"ecs:ListClusters",
							"ecs:DescribeClusters",
							"ecs:ListContainerInstances",
							"ecs:DescribeContainerInstances",
							"ecs:ListServices",
							"ecs:DescribeServices",
							"ecs:ListTaskDefinitions",
							"ecs:DescribeTaskDefinition",
							"ecs:ListTasks",
							"ecs:DescribeTasks",
							"ssm:ListResourceDataSync",
							"ssm:ListAssociations",
							"ssm:ListDocumentVersions",
							"ssm:ListDocuments",
							"ssm:ListInstanceAssociations",
							"ssm:ListInventoryEntries",
							"elasticache:Describe*",
							"elasticache:List*",
							"elasticbeanstalk:Describe*",
							"elasticfilesystem:DescribeFileSystems",
							"elasticfilesystem:DescribeTags",
							"elasticloadbalancing:Describe*",
							"elasticmapreduce:Describe*",
							"elasticmapreduce:List*",
							"es:ListDomainNames",
							"es:DescribeElasticsearchDomains",
							"glacier:ListTagsForVault",
							"glacier:DescribeVault",
							"glacier:GetVaultNotifications",
							"glacier:DescribeJob",
							"glacier:GetJobOutput",
							"glacier:ListJobs",
							"glacier:ListVaults",
							"iam:Get*",
							"iam:List*",
							"iam:GenerateCredentialReport",
							"iot:DescribeThing",
							"iot:ListThings",
							"kms:DescribeKey",
							"kms:GetKeyPolicy",
							"kms:GetKeyRotationStatus",
							"kms:ListAliases",
							"kms:ListGrants",
							"kms:ListKeys",
							"kms:ListKeyPolicies",
							"kms:ListResourceTags",
							"kinesis:ListStreams",
							"kinesis:DescribeStream",
							"kinesis:GetShardIterator",
							"lambda:ListFunctions",
							"lambda:ListTags",
							"Organizations:List*",
							"Organizations:Describe*",
							"rds:Describe*",
							"rds:List*",
							"redshift:Describe*",
							"route53:ListHealthChecks",
							"route53:ListHostedZones",
							"route53:ListResourceRecordSets",
							"s3:GetBucketACL",
							"s3:GetBucketLocation",
							"s3:GetBucketLogging",
							"s3:GetBucketPolicy",
							"s3:GetBucketTagging",
							"s3:GetBucketWebsite",
							"s3:GetBucketNotification",
							"s3:GetLifecycleConfiguration",
							"s3:GetNotificationConfiguration",
							"s3:List*",
							"sdb:ListDomains",
							"sdb:DomainMetadata",
							"ses:ListIdentities",
							"ses:GetSendStatistics",
							"ses:GetIdentityDkimAttributes",
							"ses:GetIdentityVerificationAttributes",
							"ses:GetSendQuota",
							"sns:GetSnsTopic",
							"sns:GetTopicAttributes",
							"sns:GetSubscriptionAttributes",
							"sns:ListTopics",
							"sns:ListSubscriptionsByTopic",
							"sqs:ListQueues",
							"sqs:GetQueueAttributes",
							"storagegateway:Describe*",
							"storagegateway:List*",
							"support:*",
							"swf:ListClosedWorkflowExecutions",
							"swf:ListDomains",
							"swf:ListActivityTypes",
							"swf:ListWorkflowTypes",
							"workspaces:DescribeWorkspaceDirectories",
							"workspaces:DescribeWorkspaceBundles",
							"workspaces:DescribeWorkspaces"
						],
						"Resource": "*"
					}]
				}
			}
		},
		"rDbrPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeBillingBucket",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-DBR-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[{
						"Sid": "CostReadDBR",
						"Effect": "Allow",
						"Action":[
							"s3:GetBucketACL",
							"s3:GetBucketLocation",
							"s3:GetBucketLogging",
							"s3:GetBucketPolicy",
							"s3:GetBucketTagging",
							"s3:GetBucketWebsite",
							"s3:GetBucketNotification",
							"s3:GetLifecycleConfiguration",
							"s3:GetNotificationConfiguration",
							"s3:GetObject"
						],
						"Resource":[
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pBillingBucket}"},
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pBillingBucket}/*"}
						]
					}]
				}
			}
		},
		"rCurPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeCurBucket",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"Roles":[{"Ref": "rCloudCheckrRole"}],
				"PolicyName": "CloudCheckr-CUR-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement":[
					{
						"Sid": "CostReadCUR",
						"Action":[
							"s3:GetObject"
						],
						"Effect": "Allow",
						"Resource":[
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pCurBucket}"},
							{"Fn::Sub": "arn:${AWS::Partition}:s3:::${pCurBucket}/*"}
						]
					}]
				}
			}
		},
		"rCostPolicy": {
			"Type": "AWS::IAM::Policy",
			"Condition": "cIncludeCost",
			"DependsOn": "rCloudCheckrRole",
			"Properties": {
				"PolicyName": "CloudCheckr-Cost-Policy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Sid": "CloudCheckrCostPermissions",
						"Action": [
							"ec2:DescribeAccountAttributes",
							"ec2:DescribeAvailabilityZones",
							"ec2:DescribeReservedInstancesOfferings",
							"ec2:DescribeReservedInstances",
							"ec2:DescribeReservedInstancesListings",
							"ec2:DescribeHostReservationOfferings",
							"ec2:DescribeReservedInstancesModifications",
							"ec2:DescribeHostReservations",
							"ec2:DescribeInstances",
							"ec2:DescribeInstanceStatus",
							"ec2:DescribeRegions",
							"ec2:DescribeKeyPairs",
							"ec2:DescribePlacementGroups",
							"ec2:DescribeAddresses",
							"ec2:DescribeSpotInstanceRequests",
							"ec2:DescribeImages",
							"ec2:DescribeImageAttribute",
							"ec2:DescribeSnapshots",
							"ec2:DescribeVolumes",
							"ec2:DescribeTags",
							"ec2:DescribeNetworkInterfaces",
							"ec2:DescribeSecurityGroups",
							"ec2:DescribeInstanceAttribute",
							"ec2:DescribeVolumeStatus",
							"elasticache:DescribeReservedCacheNodes",
							"elasticache:DescribeReservedCacheNodesOfferings",
							"rds:DescribeReservedDBInstances",
							"rds:DescribeReservedDBInstancesOfferings",
							"rds:DescribeDBInstances",
							"redshift:DescribeReservedNodes",
							"redshift:DescribeReservedNodeOfferings",
							"s3:GetBucketACL",
							"s3:GetBucketLocation",
							"s3:GetBucketLogging",
							"s3:GetBucketPolicy",
							"s3:GetBucketTagging",
							"s3:GetBucketWebsite",
							"s3:GetBucketNotification",
							"s3:GetLifecycleConfiguration",
							"s3:GetNotificationConfiguration",
							"s3:List*",
							"dynamodb:DescribeReservedCapacity",
							"dynamodb:DescribeReservedCapacityOfferings",
							"iam:GetAccountAuthorizationDetails",
							"iam:ListRolePolicies",
							"iam:ListAttachedRolePolicies"
						],
						"Effect": "Allow",
						"Resource": "*"
					}]
				},
				"Roles":[{"Ref": "rCloudCheckrRole"}]
			}
		}
	},
	"Outputs": {
		"oRoleArn": {
			"Description": "ARN of the IAM Role",
			"Value": {"Fn::GetAtt":["rCloudCheckrRole","Arn"]}
		}
	}
}